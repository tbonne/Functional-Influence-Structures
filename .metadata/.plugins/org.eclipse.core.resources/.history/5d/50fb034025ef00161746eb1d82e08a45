package tools;

import java.util.ArrayList;

import LHP.Baboon;
import LHP.Primate;

public final strictfp class  NetworkUtils {
	
	public static void randomNet(ArrayList<Baboon> primates){
		
		
		
	}
	
	public static void leaderNet(ArrayList<Baboon> primates){
		
	}
	
	public static void corePeriphery(ArrayList<Baboon> primates,int coreSize){
		
		for(Primate p:orderedP){
		//System.out.println("starting with "+p.id);
		if(p.getId()==0)p.setBaboonFollower(0);
		if(p.getId()==1)p.setBaboonFollower(0);
		if(p.getId()==2)p.setBaboonFollower(0);//3
		if(p.getId()==3)p.setBaboonFollower(0);
		if(p.getId()==4)p.setBaboonFollower(2);
		if(p.getId()==5)p.setBaboonFollower(2);
		if(p.getId()==6)p.setBaboonFollower(2);
		if(p.getId()==7)p.setBaboonFollower(1);
		if(p.getId()==8)p.setBaboonFollower(1);//7
		if(p.getId()==9)p.setBaboonFollower(1);
		if(p.getId()==10)p.setBaboonFollower(3);
		if(p.getId()==11)p.setBaboonFollower(3);
		if(p.getId()==12)p.setBaboonFollower(3);
		if(p.getId()==13)p.setBaboonFollower(11);
		
		//p.setBaboonFollowerRand(p);
		//p.setBaboonFollowerLeader();
	//}
		
	}

}
