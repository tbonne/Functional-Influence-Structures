package tools;

import java.util.ArrayList;

import LHP.Baboon;
import LHP.Primate;

public final strictfp class  NetworkUtils {
	
	public static void randomNet(ArrayList<Baboon> primates){
		
		//get this from a list generated by r code? rserve or just csv...
		
		
	}
	
	public static void leaderNet(ArrayList<Baboon> primates){
		//this is always the same
		
		
		
		
	}
	
	public static void corePeriphery(ArrayList<Baboon> primates,int corePercentage){
		
		//this won't work (bellow) but something dependent on coreSize and group size will
		
		int groupSize = primates.size();
		int coreSize = groupSize*(corePercentage/100); //need to make sure rounding works here...
		
		
		for(int i = 0 ; i<groupSize;i++){
		
			///if(i<coreSize)
		
		//p.setBaboonFollowerRand(p);
		//p.setBaboonFollowerLeader();
	}
		
	}

}
